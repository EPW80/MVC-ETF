<!DOCTYPE html>
<html>
  <head>
    <title>Stock Data</title>
  </head>
  <body>
    <h1>Stock Data</h1>
    <form id="stockForm">
      <label for="symbol">Symbol:</label>
      <input type="text" id="symbol" name="symbol" required />
      <label for="startDate">Start Date:</label>
      <input type="date" id="startDate" name="startDate" required />
      <label for="endDate">End Date:</label>
      <input type="date" id="endDate" name="endDate" required />
      <button type="submit">Get Data</button>
    </form>
    <canvas id="chart"></canvas>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
    <script>
      let chartInstance = null;

      document
        .getElementById("stockForm")
        .addEventListener("submit", async (event) => {
          event.preventDefault();
          const symbol = document.getElementById("symbol").value;
          const startDate = document.getElementById("startDate").value;
          const endDate = document.getElementById("endDate").value;

          try {
            const response = await fetch(
              `/data?symbol=${symbol}&startDate=${startDate}&endDate=${endDate}`
            );
            const data = await response.json();

            // Log the data to verify the structure
            console.log("Received data:", data);

            const labels = data.map((item) => item.date);
            const prices = data.map((item) => item.close);

            // Log the mapped data
            console.log("Labels:", labels);
            console.log("Prices:", prices);

            const canvas = document.getElementById("chart");
            if (canvas instanceof HTMLCanvasElement) {
              const ctx = canvas.getContext("2d");
              if (ctx) {
                if (chartInstance) {
                  chartInstance.destroy();
                }
                chartInstance = new Chart(ctx, {
                  type: "line",
                  data: {
                    labels: labels,
                    datasets: [
                      {
                        label: "Close Price",
                        data: prices,
                        borderColor: "rgba(75, 192, 192, 1)",
                        borderWidth: 1,
                      },
                    ],
                  },
                  options: {
                    scales: {
                      x: {
                        type: "time",
                        time: {
                          unit: "day",
                        },
                      },
                    },
                  },
                });
              } else {
                console.error("Unable to get 2D context from canvas");
              }
            } else {
              console.error('Element with id "chart" is not a canvas element');
            }
          } catch (error) {
            console.error("Error fetching data:", error);
          }
        });
    </script>
  </body>
</html>
